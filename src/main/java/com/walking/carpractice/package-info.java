/**
 * Опишите сущность Car со свободным набором атрибутов (рекомендую базироваться на практике предыдущих уроков).
 * Реализуйте CRUD для нее, с соблюдением следующих условий:
 * <p>
 * 1. Каждая из операций должна обрабатываться отдельным do-методом сервлета с маппингом
 * <a href="">${contextPath}/car</a>.
 * Для данных операций должны быть корректно определены методы HTTP с учетом семантики;
 * <p>
 * 2. Тела запросов и ответов должны быть представлены в виде JSON;
 * <p>
 * 3. Получение данных можно реализовать в любом из вариантов - по id, указанному фильтру или любым иным образом вплоть
 * до получения всего списка машин без фильтрации;
 * <p>
 * 4. Хранение данных должно быть реализовано на базе PostgreSQL;
 * <p>
 * 5. Создание таблицы в БД должно быть реализовано с помощью миграций. Опционально могут быть добавлены индексы, в
 * зависимости от используемого способа получения машин;
 * <p>
 * 6. Классы бизнес-логики должны быть представлены синглтонами, их внедрение в сервлеты должно происходить с помощью
 * функциональности слушателей.
 * <p>
 * Для тестирования работы приложения рекомендую использовать HTTP-клиент.
 */
package com.walking.carpractice;
